2022 09 05

11729번 하노이 탑 이동 순서 : https://www.acmicpc.net/problem/11729

1. n – 1개의 원판을 2번 장대로 옮긴다.
2. 1번 장대에 있는 마지막 원판을 3번 장대로 옮긴다.
3. 2번 장대에 있는 n – 1개의 원판을 1번 장대를 거쳐 3번 장대로 올려놓는다.


원판의 개수가 3일 때

[1]                
[2]	           →   [2]         →              →     [1]     →    [1]      → 
[3]                [3]     [1]    [3] [2] [1]   [3] [2]          [2] [3]   [1] [2] [3]
 1    2    3        1   2   3      1   2   3     1   2   3    1   2   3     1   2   3
      0                  1              2              3            4             5

                          [1]
          [2]             [2]
→ [1]     [3]  →          [3]
   1   2   3       1   2   3
       6                7

이 과정을 토대로 재귀 함수를 만들면 풀 수 있다.
    (이 문제의 경우 옮긴 횟수를 먼저 출력해야 하므로 <cmath>의 (int)pow로 2^n – 1을 계산하여 출력한다.)

#include <iostream>
#include <cmath>

using namespace std;

void hanoi(int n, int start, int by, int end) {
    if (n == 1) cout << start << " " << end << "\n";
    else {
        hanoi(n - 1, start, end, by);
        cout << start << " " << end << "\n";
        hanoi(n - 1, by, start, end);
    }
}

int main() {
    ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
    
    int n, h = 0;
    
    cin >> n;

    h = (int)pow(2, n) - 1;

    cout << h << "\n";
    
    hanoi(n, 1, 2, 3);

    return 0;
}
