2022 10 04

1463번 1로 만들기 : https://www.acmicpc.net/problem/1463

문제를 처음 보면 주어진 수 n을 쪼개서 1이 될 경우 그 연산의 횟수를 출력해야 할 것 같지만
2부터 3, 4, 5, ... ,n - 1, n 까지 1이 되는 횟수를 차근차근 구해나가면 된다.

dp[0]과 dp[1]의 경우 연산을 수행하지 않으니 0으로 초기화해주고

dp[2]부터
2 / 2 = 1이므로 dp[2] = 1
3 / 2 - 1 = 1이므로 dp[3] = 2
4 / 2 / 2 = 1이므로 dp[4] = 2
(5 - 1) / 2 / 2 = 1이므로 dp[5] = 3

이렇게 2와 3의 배수인 경우는 연산 수가 같지만 그 외에는 -1을 연산하므로 횟수가 추가됨

이것을 코드로 옮겨보면

#include <iostream>

using namespace std;

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int n; cin >> n;
    int dp[1000000] = { 0 };
    dp[1] = 0;
    
	for (int i = 2; i <= n; i++) {
		dp[i] = dp[i - 1] + 1;
        if (i % 3 == 0) dp[i] = min(dp[i], dp[i / 3] + 1);
		    if (i % 2 == 0) dp[i] = min(dp[i], dp[i / 2] + 1);
	  }
	cout << dp[n];

	return 0;
}
