2022 08 30

그리디 알고리즘 
  동적 프로그래밍 사용 시 지나치게 많은 일을 한다는 것에서 착안하여 고안된 알고리즘이다.
  동적 프로그래밍을 대체하는 것은 아니고 같이 쓰이며 서로 보완하는 개념이다.
  
  모든 경우에서 그리디가 통하진 않으나 통하는 몇몇 문제가 있다.
  

오늘 배운것 : vector은 써야할 상황이 아니면 그냥 배열 쓰자

11399번 ATM : https://www.acmicpc.net/problem/11399

C언어

#include <stdio.h>
int main() {
	int arr[1000] = { 0 };
	int n, temp = 0, sum = 0, ans = 0;

	scanf("%d", &n);

	for (int i = 0; i < n; i++) {
		scanf("%d", &arr[i]);
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n-1; j++) {
			if (arr[j] > arr[j + 1]) {
				temp = arr[j];
				arr[j] = arr[j + 1];
				arr[j + 1] = temp;
			}
		}
	}
	for (int i = 0; i < n; i++) {
		ans += sum + arr[i];
		sum += arr[i];
	}
	printf("%d", ans);

	return 0;
}

C++

#include<iostream>

using namespace std;

int main(){
	int arr[1000] = { 0 };
	int n, temp = 0, sum = 0, ans = 0;

	cin >> n;

	for (int i = 0; i < n; i++) {
		cin >> arr[i];
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n - 1; j++) {
			if (arr[j] > arr[j + 1]) {
				temp = arr[j];
				arr[j] = arr[j + 1];
				arr[j + 1] = temp;
			}
		}
	}
	for (int i = 0; i < n; i++) {
		ans += sum + arr[i];
		sum += arr[i];
	}
	cout << ans;

	return 0;
}
